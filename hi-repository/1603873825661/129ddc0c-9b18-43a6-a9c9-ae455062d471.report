<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<report>
    <reportName>MO by VoltLevel</reportName>
    <visible>true</visible>
    <metadata>
        <location>1603873825661</location>
        <metadataFileName>395f4694-c655-4920-8884-1a1b7ea82a69.metadata</metadataFileName>
    </metadata>
    <canvas>
        <columns><![CDATA[[{"column":"CircuitBreaker.VoltLevel","label":"CircuitBreaker_VoltLevel","id":"8e4lssra3oc","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"CircuitBreaker_VoltLevel","groupBy":["db.generic.groupBy.group"],"databaseFunction":{"key":"sql.typeConversion.tochar","description":"Converts value to char type. Example:\tcast('2015-01-01' AS CHAR) result:2015-01-01 ","value":"TOCHAR","signature":"cast(${column} AS CHAR)","returns":"text","parameters":[{"name":"column","value":"CircuitBreaker.VoltLevel","column":true}]},"alias":"Volt Level"},{"column":"CircuitBreaker.EquipmentId","label":"CircuitBreaker_EquipmentId","id":"bm9pyzypljh","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"count_EquipmentId","aggregate":["db.generic.aggregate.count"],"alias":"No of MO"}]]]></columns>
    </canvas>
    <state><![CDATA[{"columns":[{"column":"CircuitBreaker.VoltLevel","label":"CircuitBreaker_VoltLevel","id":"8e4lssra3oc","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"CircuitBreaker_VoltLevel","groupBy":["db.generic.groupBy.group"],"databaseFunction":{"key":"sql.typeConversion.tochar","description":"Converts value to char type. Example:\tcast('2015-01-01' AS CHAR) result:2015-01-01 ","value":"TOCHAR","signature":"cast(${column} AS CHAR)","returns":"text","parameters":[{"name":"column","value":"CircuitBreaker.VoltLevel","column":true}]},"alias":"Volt Level"},{"column":"CircuitBreaker.EquipmentId","label":"CircuitBreaker_EquipmentId","id":"bm9pyzypljh","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"count_EquipmentId","aggregate":["db.generic.aggregate.count"],"alias":"No of MO"}],"filters":[],"customFilterExpression":"","customHavingExpression":"","customFilterExpressionObj":{},"customHavingExpressionObj":{},"havingExpressionIndexs":{},"filterExpressionIndexs":{"0":0},"options":{"limitBy":1000,"prependTableNameToAlias":true},"visualisation":{"type":"Charts","chartGroup":["C3","C3Axis","C3Bar"],"selectedType":"Charts","settings":{"script":null,"vizscriptsEditMultipleMode":false,"type":"BarChart","vizType":"Charts","chartGroup":["C3","C3Axis","C3Bar"]},"vizSelectedScripts":[{"name":"Axis Tick Rotation","scriptId":"c3Axis_js_axisTickRotate","scriptType":"js","group":"C3Axis","parameters":{"rotationValue":"0"},"renderOn":"simpleModel","isEditable":true,"description":"X axis tick rotation in c3 axis charts","icon":"/images/scriptIcons/Tick_rotate.png","isSelected":true,"isActiveScript":"active","isCheckedForMultipleEdit":false,"snippet":"\n\t\t\n\t\t\n\t\t\tvar id = hi_container.get(\"renderId\");\n\t\t\t\n\t\t\tvar ftnObj = {};\n\t\t\t\n\t\t\t\tftnObj['setaxisTickRotate'+id] = function(c){\n\t\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\t\tviz_Options = axisTickRotate(viz_Options);\n\t\t\t\t\tc.set(\"viz_Options\",viz_Options);\n\t\t\t\t\n\t\t\t\t} ;\n\t\t\t\t\t\n\t\t\t\tftnObj['extendaxisTickRotate'+id] = function(preExecution,c){\n\t\t\t\t\t\n\t\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\t\tviz_Options = axisTickRotate(viz_Options);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t}; \n\t\t\t\n\t\t\t\n\t\t    function axisTickRotate(viz_Options){\n\t\t\t\t\n\t\t\t\tif(viz_Options.chartOptions.axis){\n\t\t\t\t\tviz_Options.chartOptions.axis.x = {\n\t\t\t\t\t\ttick: {\n\t\t\t\t\t\t\t\trotate : 0,\n\t\t\t\t\t\t\t\tmultiline : false\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t viz_Options.chartOptions[\"axis\"] = {\n\t\t\t\t\tx: {\n\t\t\t\t\t\ttick: {\n\t\t\t\t\t\t\trotate : 0,\n\t\t\t\t\t\t\tmultiline : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//this case for when open chart its tick data visible in single line\n\t\t\t\n\t\t\t\t//console.log(viz_Options)\n\t\t\t\treturn viz_Options;\n\t\t\t}\n\t\t\t\n\t\t\tif(!hi_container.isSet(\"preExecution\")){\n\t\t\t\thi_container.set(\"preExecution\", ftnObj['setaxisTickRotate'+id]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"preExecution\", ftnObj['extendaxisTickRotate'+id]);\n\t\t\t}\n\t\t\n\t\t\n\t"},{"name":"Set Chart Color","scriptId":"c3Axis_js_setChartColor","scriptType":"js","group":"C3Axis","parameters":{"colorObj":{"No of MO":"rgba(160,167,1,1)"}},"renderOn":"simpleModel","isEditable":true,"description":"Set chart Color","icon":"/images/scriptIcons/SetChartColor.png","isSelected":true,"isActiveScript":"active","isCheckedForMultipleEdit":false,"snippet":"\n\t\t\n\t\t\t\n\t\t\tvar id = hi_container.get(\"renderId\");\n\t\t\t\n\t\t\tvar ftnObj = {};\n\t\t\t\n\t\t\tftnObj['setChartColor'+id] = function(c){\n\t\t\t\t\n\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\tviz_Options = chartColor(viz_Options);\n\t\t\t\tc.set(\"viz_Options\",viz_Options);\n\t\t\t };\n\t\t\t\t\t\n\t\t\tftnObj['extendsetChartColor'+id] = function(preExecution, c){\n\t\t\t\t\t\n\t\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\t\tviz_Options = chartColor(viz_Options);\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tfunction chartColor(viz_Options){\n\t\t\t\t\n\t\t\t\tif(viz_Options.chartOptions.data){\n\t\t\t\t\tviz_Options.chartOptions.data.colors = {\"No of MO\":\"rgba(160,167,1,1)\"};\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tviz_Options.chartOptions[\"data\"] = {\n\t\t\t\t\t\tcolors: {\"No of MO\":\"rgba(160,167,1,1)\"}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\treturn viz_Options;\n\t\t\t}\n\t\t\t\n\t\t\tif(!hi_container.isSet(\"preExecution\")){\n\t\t\t\thi_container.set(\"preExecution\", ftnObj['setChartColor'+id]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"preExecution\", ftnObj['extendsetChartColor'+id]);\n\t\t\t}\n\n\t\t\t\n\t\t\n\t"}]},"scripts":[],"styles":"","customStyles":"","customScripts":["\n\t\t\n\t\t\n\t\t\tvar id = hi_container.get(\"renderId\");\n\t\t\t\n\t\t\tvar ftnObj = {};\n\t\t\t\n\t\t\t\tftnObj['setaxisTickRotate'+id] = function(c){\n\t\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\t\tviz_Options = axisTickRotate(viz_Options);\n\t\t\t\t\tc.set(\"viz_Options\",viz_Options);\n\t\t\t\t\n\t\t\t\t} ;\n\t\t\t\t\t\n\t\t\t\tftnObj['extendaxisTickRotate'+id] = function(preExecution,c){\n\t\t\t\t\t\n\t\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\t\tviz_Options = axisTickRotate(viz_Options);\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t}; \n\t\t\t\n\t\t\t\n\t\t    function axisTickRotate(viz_Options){\n\t\t\t\t\n\t\t\t\tif(viz_Options.chartOptions.axis){\n\t\t\t\t\tviz_Options.chartOptions.axis.x = {\n\t\t\t\t\t\ttick: {\n\t\t\t\t\t\t\t\trotate : 0,\n\t\t\t\t\t\t\t\tmultiline : false\n\t\t\t\t\t\t\t}\t\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t viz_Options.chartOptions[\"axis\"] = {\n\t\t\t\t\tx: {\n\t\t\t\t\t\ttick: {\n\t\t\t\t\t\t\trotate : 0,\n\t\t\t\t\t\t\tmultiline : false\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//this case for when open chart its tick data visible in single line\n\t\t\t\n\t\t\t\t//console.log(viz_Options)\n\t\t\t\treturn viz_Options;\n\t\t\t}\n\t\t\t\n\t\t\tif(!hi_container.isSet(\"preExecution\")){\n\t\t\t\thi_container.set(\"preExecution\", ftnObj['setaxisTickRotate'+id]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"preExecution\", ftnObj['extendaxisTickRotate'+id]);\n\t\t\t}\n\t\t\n\t\t\n\t","\n\t\t\n\t\t\t\n\t\t\tvar id = hi_container.get(\"renderId\");\n\t\t\t\n\t\t\tvar ftnObj = {};\n\t\t\t\n\t\t\tftnObj['setChartColor'+id] = function(c){\n\t\t\t\t\n\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\tviz_Options = chartColor(viz_Options);\n\t\t\t\tc.set(\"viz_Options\",viz_Options);\n\t\t\t };\n\t\t\t\t\t\n\t\t\tftnObj['extendsetChartColor'+id] = function(preExecution, c){\n\t\t\t\t\t\n\t\t\t\t\tvar viz_Options = c.get(\"viz_Options\");\n\t\t\t\t\tviz_Options = chartColor(viz_Options);\n\t\t\t\t\n\t\t\t};\n\t\t\t\n\t\t\tfunction chartColor(viz_Options){\n\t\t\t\t\n\t\t\t\tif(viz_Options.chartOptions.data){\n\t\t\t\t\tviz_Options.chartOptions.data.colors = {\"No of MO\":\"rgba(160,167,1,1)\"};\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tviz_Options.chartOptions[\"data\"] = {\n\t\t\t\t\t\tcolors: {\"No of MO\":\"rgba(160,167,1,1)\"}\n\t\t\t\t\t}\t\n\t\t\t\t}\n\t\t\t\treturn viz_Options;\n\t\t\t}\n\t\t\t\n\t\t\tif(!hi_container.isSet(\"preExecution\")){\n\t\t\t\thi_container.set(\"preExecution\", ftnObj['setChartColor'+id]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"preExecution\", ftnObj['extendsetChartColor'+id]);\n\t\t\t}\n\n\t\t\t\n\t\t\n\t"]}]]></state>
    <security>
        <createdBy>1</createdBy>
        <organization></organization>
    </security>
</report>
