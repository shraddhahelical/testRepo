<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<report>
    <reportName>DynamicView_ParentReport</reportName>
    <visible>true</visible>
    <metadata>
        <location>1588851297738/1589444653445/1590651742641/1591111658450</location>
        <metadataFileName>9fdad882-9600-43aa-92f0-2553f60922c8.metadata</metadataFileName>
    </metadata>
    <canvas>
        <columns><![CDATA[[{"column":"TextFilterConditions.booking_platform","label":"TextFilterConditions_booking_platform","id":"h61psquzbuj","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"TextFilterConditions_booking_platform","groupBy":["db.generic.groupBy.group"]},{"column":"TextFilterConditions.destination","label":"TextFilterConditions_destination","id":"101u68ahej1a","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"TextFilterConditions_destination","groupBy":["db.generic.groupBy.group"],"alias":"TextFilterConditions_destination"}]]]></columns>
    </canvas>
    <state><![CDATA[{"columns":[{"column":"TextFilterConditions.booking_platform","label":"TextFilterConditions_booking_platform","id":"h61psquzbuj","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"TextFilterConditions_booking_platform","groupBy":["db.generic.groupBy.group"]},{"column":"TextFilterConditions.destination","label":"TextFilterConditions_destination","id":"101u68ahej1a","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"TextFilterConditions_destination","groupBy":["db.generic.groupBy.group"],"alias":"TextFilterConditions_destination"}],"filters":[],"customFilterExpression":"","customHavingExpression":"","customFilterExpressionObj":{},"customHavingExpressionObj":{},"havingExpressionIndexs":{},"filterExpressionIndexs":{},"options":{"limitBy":1000,"prependTableNameToAlias":true},"visualisation":{"type":"Table","chartGroup":"","selectedType":"Table","settings":{"script":null,"vizscriptsEditMultipleMode":false},"vizSelectedScripts":[{"name":"Drill Down","scriptId":"table_js_Drilldown","scriptType":"js","group":"Table","parameters":{"columnNames":["TextFilterConditions_booking_platform","TextFilterConditions_destination"],"paramNameArr":["destination"],"nameArr":["",["destination"]],"customNameArr":["",[]],"valArr":["",["TextFilterConditions_destination"]],"customValArr":["",[]],"customParamNameArr":[],"paramValArr":[],"customParamValArr":[],"url":["","dir=1588851297738/1589444653445/1590651742641/1591111658450/1591173691263&file=596ecc80-94ac-4767-a81d-0f5de009f78f.report&mode=open"],"logicalUrl":["","/Adhoc Dynamic View/Derby DB/Dynamic View/Dynamic View Filters/DrillDown Report/DynamicView_ChildReport"],"columnNames1":["TextFilterConditions_destination"],"switch":"true","clmnNameArr":["","TextFilterConditions_destination"],"enableIPC":["false","true"],"newTab":["true","false"],"renderHere":["false","false"],"parentWindowTitle":"DynamicView_ParentReport | HI: Report-edit"},"renderOn":"simpleModel","isEditable":true,"description":"Adds Drill Down to columns","icon":"/images/scriptIcons/DrillDown.png","isSelected":true,"isActiveScript":"active","isCheckedForMultipleEdit":false,"snippet":"\n\t\t\n\t\t\n\t\tvar id = hi_container.get(\"renderId\");\n\t\t\n\t\tif(id== \"\"){\n\t\t\tvar tableViz = '#main'+id+' .table-viz';\n\t\t\tvar drillDown = '#chart'+id+' .drilldwn';\n\t\t}\n\t\telse{\n\t\t\tvar tableViz = '#main-'+id+' .table-viz';\n\t\t\tvar drillDown = '#chart-'+id+' .drilldwn';\n\t\t}\n\t\t\n\t\tvar ftnObj = {};\n\t\t\t\n\t\tftnObj['RenderTable'+id]= function(){\n\t\t\t\t\t\n\t\t\tvar column_index=[];\n\t\t\tvar sel_column_index=[];\n\t\t\tvar flag=0;\n\t\t\tvar columnNames=[\"TextFilterConditions_booking_platform\",\"TextFilterConditions_destination\"];\n\t\t\tvar column_name=[\"TextFilterConditions_destination\"];\n\t//\t\tvar colnames=${selectedClmnArr};\n\t//\t\tvar colval=${selectedClmnArrVal};\n\t\t\tvar clmnNameArr=[\"\",\"TextFilterConditions_destination\"];\n\t\t\tvar paramNameArr=[\"destination\"];\n\t\t\tvar paramValArr=[];\n\t\t\tvar customParamNameArr=[];\n\t\t\tvar customParamValArr=[];\n\t\t\tvar valArr=[\"\",[\"TextFilterConditions_destination\"]];\n\t\t\tvar nameArr=[\"\",[\"destination\"]];\n\t\t\tvar customNameArr=[\"\",[]];\n\t\t\tvar customValArr=[\"\",[]];\n\t//\t\tvar input_text=${selText};\n\t\t\tvar reportUrl=[\"\",\"dir=1588851297738/1589444653445/1590651742641/1591111658450/1591173691263&file=596ecc80-94ac-4767-a81d-0f5de009f78f.report&mode=open\"];\n\t\t\tvar logicalUrl=[\"\",\"/Adhoc Dynamic View/Derby DB/Dynamic View/Dynamic View Filters/DrillDown Report/DynamicView_ChildReport\"];\n\t\t\tvar enableIPC=[\"false\",\"true\"];\n\t\t\tvar renderHere=[\"false\",\"false\"];\n\t\t\tvar newTab=[\"true\",\"false\"];\n\t\t\tvar currentColumnIndex;\n\t\t\tvar currentCellValue;\n\t\t\tvar selCellValue=[];\n\t\t\tvar nthRow;\n\t\t\tvar currentRowPosition=0;\n\t\t\tvar paramNo=-1;\n\t\t    var idArr=[];\t\n            var parentWindowTitle=\"DynamicView_ParentReport | HI: Report-edit\";  // To get the window title for the bread crumb\n            var parentWindowUrl;\t\n\t\t\t\t\n\t\t\t//\tparentWindowUrl=window.location.href;\n\t\t\t//\tparentWindowTitle=$(document).attr('title');\n\t\t\t//\tparentWindowTitle=$(document).find(\"title\").text();\n\t\t\t\tparentWindowUrl=$(location).attr('href');\n\t\t\t\n\t\t\t\n\t\t\tvar table = document.querySelectorAll(tableViz);\n\t\t\t[].forEach.call(table, getColumnIndex);\n\t\t// On clicking the Drill Down cell\t\t\t \n\t\t\t$(drillDown).on('click', function(e) {\n\t\t\t  \n\t\t\t\t//\tconsole.log(columnNames);\n\t\t\t\t//\tconsole.log(input_text);\n\t\t\t\t//\tconsole.log(e);\n\t\t\t\t//\tconsole.log('cell index   :-'+this.cellIndex);\n\t\t\t\t//\tconsole.log($(this).parent().attr('data-row-id'));\n\t\t\t\t\tcurrentColumnIndex=this.cellIndex;// to get the column index on which click is there\n\t\t\t\t\tcurrentCellValue=e.target.innerText;// to get the value of the cell on which the click happens.\n\t\t\t\t\t\n\t\t\t\t\tcurrentRowPosition=$(this).parent().attr('data-row-id');// to get row no. where the click has happened\n\t\t\t\t\tcurrentRowPosition=parseInt(currentRowPosition);// To change it to integer value\n\t\t\t\t\tvar ParamStr=\"\";\n\t\t\t\t\tvar table = document.querySelectorAll(tableViz);\n\t\t\t\t\t[].forEach.call(table,GetValue);\n\t\t\t\t//\tconsole.log(\"currentRowPosition\"+currentRowPosition);\n\t\t\t\t//\tconsole.log(\"selCellValue\"+selCellValue);\n\t\t\t\t//\tconsole.log(\"paramNameArr\"+paramNameArr);\n\t\t\t\t//\tconsole.log(nameArr[currentColumnIndex]);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// To create the parameter string to be appended on the URL.(when the  values are taken from a table)\n\t\t\t\t\tfor(var urlParam=0;urlParam<selCellValue.length;urlParam++)\n\t\t\t\t\t{\n\t\t\t\t\t  var selCellValueArr=selCellValue[urlParam].split('_');// To get the value \n\t\t\t\t\t  ParamStr=ParamStr+'&'+nameArr[currentColumnIndex][selCellValueArr[1]]+\"=\"+selCellValueArr[0];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//  To create the parameter string for custom variable. \n\t\t\t\t\tfor(var urlCustom=0;urlCustom<customNameArr[currentColumnIndex].length;urlCustom++)\n\t\t\t\t\t{\n\t\t\t\t\t  ParamStr=ParamStr+'&'+customNameArr[currentColumnIndex][urlCustom]+\"=\"+customValArr[currentColumnIndex][urlCustom];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t var logicalPathSplit=logicalUrl[currentColumnIndex].split('/');\n\t\t\t\t\tvar childWindowTitle=logicalPathSplit.pop();// To get the name of the report to be opened on drill down\n\t\t\t\t\t\n\t\t\t\t// Code to Create breadcrumb div using logicalUrl\t\n\t\t\t\t\t/*\n\t\t\t\t\tvar breadCrumbdiv= document.createElement('div');\n\t\t\t\t\tbreadCrumbdiv.id=\"breadCrumbdiv\";\n\t\t\t\t\tbreadCrumbdiv.className += \" row \";\n\t\t\t\t//\tbreadCrumbdiv.style = \"height:100%\";\n\t\n\t\t\t\t\tvar breadCrumblist = document.createElement('ol');\n\t\t\t\t\t\tbreadCrumblist.id = \"breadCrumblist\";\n\t\t\t\t\t\tbreadCrumblist.className += \" row breadcrumb\";\n\t\t\t\t\t\tbreadCrumblist.style='margin-left:10px;'\n\t\t\t\t    var logicalPathSplit=logicalUrl[currentColumnIndex].split('/');\n\t\t\t\t\tvar childWindowTitle=logicalPathSplit.pop();// To get the name of the report to be opened on drill down\n\t\t\t\t\tfor(var i=0;i<2;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar listElement= document.createElement('li');\n\t\t\t\t\t\tif(i==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlistElement.innerHTML='<a href=\"'+parentWindowUrl+'\">'+parentWindowTitle+'<\/a>';  // to give the  1st list element as parent window\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(i==1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlistElement.innerHTML=childWindowTitle;\n\t\t\t\t\t\t\tlistElement.className +=\"active\"\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreadCrumblist.appendChild(listElement);\n\t\t\t\t\t}\n\t\t\t\t\tbreadCrumbdiv.appendChild(breadCrumblist);\n\t\t\t\t\t\n\t\t\t\t\t*/\n\t\t\t\t\t\t\t\n\t\t\t// If for current column enableIPC is false\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t/*\t\n\t\t\tif(enableIPC[currentColumnIndex]==\"false\") {\t\n\t\t        //$(window.parent.document.body).find(\"#dashboardCanvas\").css(\"margin-top\",\"100px\");\n                $(window.parent.document.body).find(\"#hi-cacheToolbar\").css(\"margin-bottom\",\"50px\");\n\t\t\t\t$(window.parent.document.body).find(\"#hi-cacheToolbar\").append(breadCrumbdiv);\n\t\t  \n               // If for current column RENDER HERE is TRUE\t\t\t   \n\t\t\t\tif(renderHere[currentColumnIndex]==\"true\") {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// To change the mode to from 'mode=dashboard' to 'mode=open'\n\t\t\t       modeDashboardReportUrl=reportUrl[currentColumnIndex].replace(\"mode=open\",\"mode=dashboard\");\n\t\t\t\t\t\n\t\t\t\t\tvar w = window.open(modeDashboardReportUrl+ParamStr,'_self');\n\t\t\t\t\t//var w = reportUrl[currentColumnIndex]+ParamStr;\n\t\t\t\t\tconsole.log(\"w:\", w);\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t/*w.document.body.append(w.document.body + \"some other data\");\n\t\t\t\t\t$(window.child.document.body).find(\"#hi-cacheToolbar\").css(\"margin-bottom\",\"50px\");\n\t\t\t\t\t$(window.child.document.body).find(\"#hi-cacheToolbar\").append(breadCrumbdiv);\t\t\t\n\t\t\t\t  \n\t\t\t\t  setTimeout(function(){ \n\t\t\t\t  console.log(\"After window Load\");\n\t\t\t\t  console.log(\"in set timeout\");\n\t\t\t\t  \n\t\t\t\t  $('body').find(\"#dashboardCanvas\").css(\"margin-top\",\"100px\");\n                  $('body').find(\"#hi-cacheToolbar\").css(\"margin-bottom\",\"100px\");\n\t\t\t\t  $('body').find(\"#hi-cacheToolbar\").append(breadCrumbdiv);\n\t\t\t\t\t}, 5000);*/\t\n\t\t\t\t\t// If for current column enableIPC is false\t\n\t\t\tif(enableIPC[currentColumnIndex]==\"false\") {\t\n\t\t\t\n\t\t\t   if(renderHere[currentColumnIndex]==\"true\") {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// To change the mode to from 'mode=dashboard' to 'mode=open'\n\t\t\t       modeDashboardReportUrl=reportUrl[currentColumnIndex].replace(\"mode=open\",\"mode=dashboard\");\n\t\t\t\t\t\n\t\t\t\t\tvar w = window.open(modeDashboardReportUrl+ParamStr,'_self');\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t//To open in new window\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\t\t\tvar w= window.open(window.DashboardGlobals.baseUrl+\"/hi.html?\"+reportUrl[currentColumnIndex]+ParamStr,\"_blank\");\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t \n\t\t\t\t}\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t   // Code to execute in case of enableIPC is false\n\t\t    for(var urlCustom=0;urlCustom<customNameArr[currentColumnIndex].length;urlCustom++){\n\t\t\t\t\tif(parent.adhocScripts){ \n\t\t\t\t\t\tparent.adhocScripts.setVariable(customNameArr[currentColumnIndex][urlCustom],customValArr[currentColumnIndex][urlCustom]);\n\t\t\t\t\t}\n\t\t\t\t\tif(hi_container.isSet('iframe')){\n\t\t\t\t\t\t\n\t\t\t\t\t\tDashboard.setVariable(customNameArr[currentColumnIndex][urlCustom],customValArr[currentColumnIndex][urlCustom]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tparent.Dashboard.setVariable(customNameArr[currentColumnIndex][urlCustom],customValArr[currentColumnIndex][urlCustom]);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var urlParam=0;urlParam<selCellValue.length;urlParam++){\n\t\t\t\t  var selCellValueArr=selCellValue[urlParam].split('_');\n\t\t\t\t if(parent.adhocScripts){\n\t\t\t\t\tparent.adhocScripts.setVariable(nameArr[currentColumnIndex][selCellValueArr[1]],selCellValueArr[0]);\n\t\t\t\t  }\n\t\t\t\t if(hi_container.isSet('iframe')){\n\t\t\t\t\tDashboard.setVariable(nameArr[currentColumnIndex][selCellValueArr[1]],selCellValueArr[0]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tparent.Dashboard.setVariable(nameArr[currentColumnIndex][selCellValueArr[1]],selCellValueArr[0]);\n\t\t\t\t}\n\t\t\t\t \n\t\t\t}\n\t\t\t }\n\t\t\t });\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t \n\t\t\t\t   //To get the column index of the columns selected by the user for drill down.\n\t\t\tfunction getColumnIndex(table) \n\t\t\t{\n\t\t\t\t[].forEach.call(table.rows, function(row, i){\n\t\t\t\t\tjQuery.each(row.cells, function() {\n\t\t\t\t\t\tfor(var j=0;j<column_name.length;j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(i == 0 && this.textContent == column_name[j])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolumn_index.push(this.cellIndex);// to get the cell index of selected columns\n\t\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif(i != 0 && flag == 1)\n\t\t\t\t\t{ \n\t\t\t\t\t\tfor(k=0;k<column_index.length;k++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar cell = row.cells[column_index[k]];// to get the cells for a particular column index\n\t\t\t\t\t\t\tvar number=cell.innerText;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcell.innerHTML=\"<a>\"+number+\"<\/a>\";  // Giving the Drill down column as link(clickable).\n\t\t\t\t\t\t\t\t$(cell).css({\"text-decoration\" : \"underline\"});\n\t\t\t\t\t\t\t\t$(cell).addClass(\"drilldwn\");//Adding class 'Drill down ' to it.\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t//To get the  value for selected drill down \n\t\t\tfunction GetValue(table) \n\t\t\t{\n\t\t\t   var n=0;\n\t\t\t   selCellValue=[];// to get all the values in array\n\t\t\t   sel_column_index=[];//to get the column index of selected values\n\t\t\t\t[].forEach.call(table.rows, function(row, n){\n\t\t\t\t\n\t\t\t\t\tjQuery.each(row.cells, function() {\n\t\t\t\t\t\t\n\t\t\t\t\t   for(var i=0;i<valArr[currentColumnIndex].length;i++)\n\t\t\t\t\t   {\n\t\t\t\t\t\t\tif(n == 0 && this.textContent == valArr[currentColumnIndex][i])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsel_column_index.push(this.cellIndex+'_'+i);//to store the column index from where the values is to be fetched and to the same column the value is to be assigned \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t//\t sel_column_index.sort(function(a, b){return a-b});\n\t\t\t\t\tif(n ==currentRowPosition+1)//since 1st data row after thead row is counted as 0.\n\t\t\t\t\t{ \n\t\t\t\t\t\tfor(k=0;k<sel_column_index.length;k++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    var sel_column_index_arr=sel_column_index[k].split(\"_\");\n\t\t\t\t\t\t\tvar cell = row.cells[sel_column_index_arr[0]];\n\t\t\t\t\t\t\tselCellValue.push(cell.innerText+'_'+sel_column_index_arr[1]);//store the value with the index\n\t\t\t\t\t\t  \n\t\t\t\t\t\t\t//\tcell.innerHTML=\"<a>\"+number+\"<\/a>\";\n\t\t\t\t\t\t\t//\t$(cell).css({\"text-decoration\" : \"underline\"});\n\t\t\t\t\t\t\t//\t$(cell).addClass(\"drilldwn\");\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(!hi_container.isSet(\"postExecution\")){\n\t\t\t\thi_container.set(\"postExecution\", ftnObj['RenderTable'+id]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"postExecution\", ftnObj['RenderTable'+id]);\n\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\n\t\t\n\t"}]},"scripts":[],"styles":"","customStyles":"","customScripts":["\n\t\t\n\t\t\n\t\tvar id = hi_container.get(\"renderId\");\n\t\t\n\t\tif(id== \"\"){\n\t\t\tvar tableViz = '#main'+id+' .table-viz';\n\t\t\tvar drillDown = '#chart'+id+' .drilldwn';\n\t\t}\n\t\telse{\n\t\t\tvar tableViz = '#main-'+id+' .table-viz';\n\t\t\tvar drillDown = '#chart-'+id+' .drilldwn';\n\t\t}\n\t\t\n\t\tvar ftnObj = {};\n\t\t\t\n\t\tftnObj['RenderTable'+id]= function(){\n\t\t\t\t\t\n\t\t\tvar column_index=[];\n\t\t\tvar sel_column_index=[];\n\t\t\tvar flag=0;\n\t\t\tvar columnNames=[\"TextFilterConditions_booking_platform\",\"TextFilterConditions_destination\"];\n\t\t\tvar column_name=[\"TextFilterConditions_destination\"];\n\t//\t\tvar colnames=${selectedClmnArr};\n\t//\t\tvar colval=${selectedClmnArrVal};\n\t\t\tvar clmnNameArr=[\"\",\"TextFilterConditions_destination\"];\n\t\t\tvar paramNameArr=[\"destination\"];\n\t\t\tvar paramValArr=[];\n\t\t\tvar customParamNameArr=[];\n\t\t\tvar customParamValArr=[];\n\t\t\tvar valArr=[\"\",[\"TextFilterConditions_destination\"]];\n\t\t\tvar nameArr=[\"\",[\"destination\"]];\n\t\t\tvar customNameArr=[\"\",[]];\n\t\t\tvar customValArr=[\"\",[]];\n\t//\t\tvar input_text=${selText};\n\t\t\tvar reportUrl=[\"\",\"dir=1588851297738/1589444653445/1590651742641/1591111658450/1591173691263&file=596ecc80-94ac-4767-a81d-0f5de009f78f.report&mode=open\"];\n\t\t\tvar logicalUrl=[\"\",\"/Adhoc Dynamic View/Derby DB/Dynamic View/Dynamic View Filters/DrillDown Report/DynamicView_ChildReport\"];\n\t\t\tvar enableIPC=[\"false\",\"true\"];\n\t\t\tvar renderHere=[\"false\",\"false\"];\n\t\t\tvar newTab=[\"true\",\"false\"];\n\t\t\tvar currentColumnIndex;\n\t\t\tvar currentCellValue;\n\t\t\tvar selCellValue=[];\n\t\t\tvar nthRow;\n\t\t\tvar currentRowPosition=0;\n\t\t\tvar paramNo=-1;\n\t\t    var idArr=[];\t\n            var parentWindowTitle=\"DynamicView_ParentReport | HI: Report-edit\";  // To get the window title for the bread crumb\n            var parentWindowUrl;\t\n\t\t\t\t\n\t\t\t//\tparentWindowUrl=window.location.href;\n\t\t\t//\tparentWindowTitle=$(document).attr('title');\n\t\t\t//\tparentWindowTitle=$(document).find(\"title\").text();\n\t\t\t\tparentWindowUrl=$(location).attr('href');\n\t\t\t\n\t\t\t\n\t\t\tvar table = document.querySelectorAll(tableViz);\n\t\t\t[].forEach.call(table, getColumnIndex);\n\t\t// On clicking the Drill Down cell\t\t\t \n\t\t\t$(drillDown).on('click', function(e) {\n\t\t\t  \n\t\t\t\t//\tconsole.log(columnNames);\n\t\t\t\t//\tconsole.log(input_text);\n\t\t\t\t//\tconsole.log(e);\n\t\t\t\t//\tconsole.log('cell index   :-'+this.cellIndex);\n\t\t\t\t//\tconsole.log($(this).parent().attr('data-row-id'));\n\t\t\t\t\tcurrentColumnIndex=this.cellIndex;// to get the column index on which click is there\n\t\t\t\t\tcurrentCellValue=e.target.innerText;// to get the value of the cell on which the click happens.\n\t\t\t\t\t\n\t\t\t\t\tcurrentRowPosition=$(this).parent().attr('data-row-id');// to get row no. where the click has happened\n\t\t\t\t\tcurrentRowPosition=parseInt(currentRowPosition);// To change it to integer value\n\t\t\t\t\tvar ParamStr=\"\";\n\t\t\t\t\tvar table = document.querySelectorAll(tableViz);\n\t\t\t\t\t[].forEach.call(table,GetValue);\n\t\t\t\t//\tconsole.log(\"currentRowPosition\"+currentRowPosition);\n\t\t\t\t//\tconsole.log(\"selCellValue\"+selCellValue);\n\t\t\t\t//\tconsole.log(\"paramNameArr\"+paramNameArr);\n\t\t\t\t//\tconsole.log(nameArr[currentColumnIndex]);\n\t\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t// To create the parameter string to be appended on the URL.(when the  values are taken from a table)\n\t\t\t\t\tfor(var urlParam=0;urlParam<selCellValue.length;urlParam++)\n\t\t\t\t\t{\n\t\t\t\t\t  var selCellValueArr=selCellValue[urlParam].split('_');// To get the value \n\t\t\t\t\t  ParamStr=ParamStr+'&'+nameArr[currentColumnIndex][selCellValueArr[1]]+\"=\"+selCellValueArr[0];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t//  To create the parameter string for custom variable. \n\t\t\t\t\tfor(var urlCustom=0;urlCustom<customNameArr[currentColumnIndex].length;urlCustom++)\n\t\t\t\t\t{\n\t\t\t\t\t  ParamStr=ParamStr+'&'+customNameArr[currentColumnIndex][urlCustom]+\"=\"+customValArr[currentColumnIndex][urlCustom];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t var logicalPathSplit=logicalUrl[currentColumnIndex].split('/');\n\t\t\t\t\tvar childWindowTitle=logicalPathSplit.pop();// To get the name of the report to be opened on drill down\n\t\t\t\t\t\n\t\t\t\t// Code to Create breadcrumb div using logicalUrl\t\n\t\t\t\t\t/*\n\t\t\t\t\tvar breadCrumbdiv= document.createElement('div');\n\t\t\t\t\tbreadCrumbdiv.id=\"breadCrumbdiv\";\n\t\t\t\t\tbreadCrumbdiv.className += \" row \";\n\t\t\t\t//\tbreadCrumbdiv.style = \"height:100%\";\n\t\n\t\t\t\t\tvar breadCrumblist = document.createElement('ol');\n\t\t\t\t\t\tbreadCrumblist.id = \"breadCrumblist\";\n\t\t\t\t\t\tbreadCrumblist.className += \" row breadcrumb\";\n\t\t\t\t\t\tbreadCrumblist.style='margin-left:10px;'\n\t\t\t\t    var logicalPathSplit=logicalUrl[currentColumnIndex].split('/');\n\t\t\t\t\tvar childWindowTitle=logicalPathSplit.pop();// To get the name of the report to be opened on drill down\n\t\t\t\t\tfor(var i=0;i<2;i++)\n\t\t\t\t\t{\n\t\t\t\t\t\tvar listElement= document.createElement('li');\n\t\t\t\t\t\tif(i==0)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlistElement.innerHTML='<a href=\"'+parentWindowUrl+'\">'+parentWindowTitle+'<\/a>';  // to give the  1st list element as parent window\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tif(i==1)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tlistElement.innerHTML=childWindowTitle;\n\t\t\t\t\t\t\tlistElement.className +=\"active\"\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreadCrumblist.appendChild(listElement);\n\t\t\t\t\t}\n\t\t\t\t\tbreadCrumbdiv.appendChild(breadCrumblist);\n\t\t\t\t\t\n\t\t\t\t\t*/\n\t\t\t\t\t\t\t\n\t\t\t// If for current column enableIPC is false\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t/*\t\n\t\t\tif(enableIPC[currentColumnIndex]==\"false\") {\t\n\t\t        //$(window.parent.document.body).find(\"#dashboardCanvas\").css(\"margin-top\",\"100px\");\n                $(window.parent.document.body).find(\"#hi-cacheToolbar\").css(\"margin-bottom\",\"50px\");\n\t\t\t\t$(window.parent.document.body).find(\"#hi-cacheToolbar\").append(breadCrumbdiv);\n\t\t  \n               // If for current column RENDER HERE is TRUE\t\t\t   \n\t\t\t\tif(renderHere[currentColumnIndex]==\"true\") {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// To change the mode to from 'mode=dashboard' to 'mode=open'\n\t\t\t       modeDashboardReportUrl=reportUrl[currentColumnIndex].replace(\"mode=open\",\"mode=dashboard\");\n\t\t\t\t\t\n\t\t\t\t\tvar w = window.open(modeDashboardReportUrl+ParamStr,'_self');\n\t\t\t\t\t//var w = reportUrl[currentColumnIndex]+ParamStr;\n\t\t\t\t\tconsole.log(\"w:\", w);\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\t\t/*w.document.body.append(w.document.body + \"some other data\");\n\t\t\t\t\t$(window.child.document.body).find(\"#hi-cacheToolbar\").css(\"margin-bottom\",\"50px\");\n\t\t\t\t\t$(window.child.document.body).find(\"#hi-cacheToolbar\").append(breadCrumbdiv);\t\t\t\n\t\t\t\t  \n\t\t\t\t  setTimeout(function(){ \n\t\t\t\t  console.log(\"After window Load\");\n\t\t\t\t  console.log(\"in set timeout\");\n\t\t\t\t  \n\t\t\t\t  $('body').find(\"#dashboardCanvas\").css(\"margin-top\",\"100px\");\n                  $('body').find(\"#hi-cacheToolbar\").css(\"margin-bottom\",\"100px\");\n\t\t\t\t  $('body').find(\"#hi-cacheToolbar\").append(breadCrumbdiv);\n\t\t\t\t\t}, 5000);*/\t\n\t\t\t\t\t// If for current column enableIPC is false\t\n\t\t\tif(enableIPC[currentColumnIndex]==\"false\") {\t\n\t\t\t\n\t\t\t   if(renderHere[currentColumnIndex]==\"true\") {\n\t\t\t\t\n\t\t\t\t\n\t\t\t\t// To change the mode to from 'mode=dashboard' to 'mode=open'\n\t\t\t       modeDashboardReportUrl=reportUrl[currentColumnIndex].replace(\"mode=open\",\"mode=dashboard\");\n\t\t\t\t\t\n\t\t\t\t\tvar w = window.open(modeDashboardReportUrl+ParamStr,'_self');\n\t\t\t\t} \n\t\t\t\t\n\t\t\t\telse {\n\t\t\t\t\t\n\t\t\t\t//To open in new window\t\n\t\t\t\t\n\t\t\t\t\t\n\t\t\t\n\t\t\t\t\tvar w= window.open(window.DashboardGlobals.baseUrl+\"/hi.html?\"+reportUrl[currentColumnIndex]+ParamStr,\"_blank\");\n\t\t\t\t\t\n\t\t\t\t\n\t\t\t\t \n\t\t\t\t}\n\t\t\t }\n\t\t\t else\n\t\t\t {\n\t\t\t   // Code to execute in case of enableIPC is false\n\t\t    for(var urlCustom=0;urlCustom<customNameArr[currentColumnIndex].length;urlCustom++){\n\t\t\t\t\tif(parent.adhocScripts){ \n\t\t\t\t\t\tparent.adhocScripts.setVariable(customNameArr[currentColumnIndex][urlCustom],customValArr[currentColumnIndex][urlCustom]);\n\t\t\t\t\t}\n\t\t\t\t\tif(hi_container.isSet('iframe')){\n\t\t\t\t\t\t\n\t\t\t\t\t\tDashboard.setVariable(customNameArr[currentColumnIndex][urlCustom],customValArr[currentColumnIndex][urlCustom]);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\tparent.Dashboard.setVariable(customNameArr[currentColumnIndex][urlCustom],customValArr[currentColumnIndex][urlCustom]);\n\t\t\t\t\t}\n\t\t\t}\n\t\t\tfor(var urlParam=0;urlParam<selCellValue.length;urlParam++){\n\t\t\t\t  var selCellValueArr=selCellValue[urlParam].split('_');\n\t\t\t\t if(parent.adhocScripts){\n\t\t\t\t\tparent.adhocScripts.setVariable(nameArr[currentColumnIndex][selCellValueArr[1]],selCellValueArr[0]);\n\t\t\t\t  }\n\t\t\t\t if(hi_container.isSet('iframe')){\n\t\t\t\t\tDashboard.setVariable(nameArr[currentColumnIndex][selCellValueArr[1]],selCellValueArr[0]);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\tparent.Dashboard.setVariable(nameArr[currentColumnIndex][selCellValueArr[1]],selCellValueArr[0]);\n\t\t\t\t}\n\t\t\t\t \n\t\t\t}\n\t\t\t }\n\t\t\t });\n\t\t\t\t \n\t\t\t\t \n\t\t\t\t \n\t\t\t\t   //To get the column index of the columns selected by the user for drill down.\n\t\t\tfunction getColumnIndex(table) \n\t\t\t{\n\t\t\t\t[].forEach.call(table.rows, function(row, i){\n\t\t\t\t\tjQuery.each(row.cells, function() {\n\t\t\t\t\t\tfor(var j=0;j<column_name.length;j++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tif(i == 0 && this.textContent == column_name[j])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tcolumn_index.push(this.cellIndex);// to get the cell index of selected columns\n\t\t\t\t\t\t\t\tflag=1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tif(i != 0 && flag == 1)\n\t\t\t\t\t{ \n\t\t\t\t\t\tfor(k=0;k<column_index.length;k++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar cell = row.cells[column_index[k]];// to get the cells for a particular column index\n\t\t\t\t\t\t\tvar number=cell.innerText;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tcell.innerHTML=\"<a>\"+number+\"<\/a>\";  // Giving the Drill down column as link(clickable).\n\t\t\t\t\t\t\t\t$(cell).css({\"text-decoration\" : \"underline\"});\n\t\t\t\t\t\t\t\t$(cell).addClass(\"drilldwn\");//Adding class 'Drill down ' to it.\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t//To get the  value for selected drill down \n\t\t\tfunction GetValue(table) \n\t\t\t{\n\t\t\t   var n=0;\n\t\t\t   selCellValue=[];// to get all the values in array\n\t\t\t   sel_column_index=[];//to get the column index of selected values\n\t\t\t\t[].forEach.call(table.rows, function(row, n){\n\t\t\t\t\n\t\t\t\t\tjQuery.each(row.cells, function() {\n\t\t\t\t\t\t\n\t\t\t\t\t   for(var i=0;i<valArr[currentColumnIndex].length;i++)\n\t\t\t\t\t   {\n\t\t\t\t\t\t\tif(n == 0 && this.textContent == valArr[currentColumnIndex][i])\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsel_column_index.push(this.cellIndex+'_'+i);//to store the column index from where the values is to be fetched and to the same column the value is to be assigned \n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t//\t sel_column_index.sort(function(a, b){return a-b});\n\t\t\t\t\tif(n ==currentRowPosition+1)//since 1st data row after thead row is counted as 0.\n\t\t\t\t\t{ \n\t\t\t\t\t\tfor(k=0;k<sel_column_index.length;k++)\n\t\t\t\t\t\t{\n\t\t\t\t\t\t    var sel_column_index_arr=sel_column_index[k].split(\"_\");\n\t\t\t\t\t\t\tvar cell = row.cells[sel_column_index_arr[0]];\n\t\t\t\t\t\t\tselCellValue.push(cell.innerText+'_'+sel_column_index_arr[1]);//store the value with the index\n\t\t\t\t\t\t  \n\t\t\t\t\t\t\t//\tcell.innerHTML=\"<a>\"+number+\"<\/a>\";\n\t\t\t\t\t\t\t//\t$(cell).css({\"text-decoration\" : \"underline\"});\n\t\t\t\t\t\t\t//\t$(cell).addClass(\"drilldwn\");\n\t\t\t\t\t\t\t  \n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tif(!hi_container.isSet(\"postExecution\")){\n\t\t\t\thi_container.set(\"postExecution\", ftnObj['RenderTable'+id]);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"postExecution\", ftnObj['RenderTable'+id]);\n\t\t\t}\n\t\t\t\t\n\t\t\t\t\t\n\t\t\n\t"]}]]></state>
    <security>
        <createdBy>1</createdBy>
        <organization></organization>
    </security>
</report>
