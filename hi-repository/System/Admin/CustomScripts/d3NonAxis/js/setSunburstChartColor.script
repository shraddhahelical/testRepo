<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<customScript>
    <visible>true</visible>
    <scriptId>d3NonAxis_js_setSunburstChartColor</scriptId>
    <scriptType>js</scriptType>
    <name>Set Chart Color</name>
    <group>D3Sunburst</group>
    <renderOn>simpleModel</renderOn>
    <description>Set chart Color for Sunburst</description>
    <icon>/images/scriptIcons/Set_Sunburst_Chart_Color.png</icon>
    <snippet>
		<![CDATA[
		hi_container.set("preExecution", setChartColor);
			function setChartColor(c){
				var viz_Options = c.get("viz_Options");
				viz_Options = chartColor(viz_Options);
				c.set("viz_Options",viz_Options);
			}

			function chartColor(viz_Options){
				var parameters = ${conditionArr};
				console.log(parameters);
				var chartColor={};
				var paramlength = parameters.length;
				for(i = 0; i < paramlength; i++){
					chartColor[parameters[i].value] = parameters[i].color;
				 }
				// 	console.log(chartColor);
			    /*if(viz_Options.chartOptions.sunburst){
					if(viz_Options.chartOptions.sunburst.data){
						viz_Options.chartOptions.sunburst.data.colors = chartColor;
					}
					else{
						viz_Options.chartOptions.sunburst.data={
							colors:chartColor
						}
					}
				}
				else{
					viz_Options.chartOptions.sunburst = {
						data:{
							colors:chartColor
						}
					}
				}*/
				//.style("fill", function(d) { return d.color; })
				viz_Options.chartOptions.sunburst={
					data:{
						colors:chartColor,
					}
				}
				
				/*var g = svg.selectAll("g").data(partition.nodes(root)).enter().append("g");
				var color = d3.scale.ordinal();
				var path = g.append("path").attr("id", arc).style("fill", function(d){ return d.chartColor })
				console.log(path);
				*/
				
				
				
				/*
				viz_Options.chartOptions.circlepacking={
					data:{
						colors:chartColor
					}
			   }*/			
				return viz_Options;
			}	
		]]>
	</snippet>
	<parameters>
		<parameter value="[]" name="conditionArr" type= "String" />
	</parameters>
    <uiSnippet>
		<![CDATA[
		<style>
				 
		</style>
		<div id="addButtonPanel" style="margin-left: 15px;">
        <label for='addButton' class='col-sm-3' >Add new</label>
        <button id='addButton' class='btn btn-primary addButton col-sm-2' onclick='addConditionPanel({color: "rgba(124,184,47,1)", value: ""}, "conditionList")'>Add</button>
      </div>
			<div id="conditionList"></div>

			<script>
			var abc = adhocScripts.getAllVariables();
				adhocScripts.resetAll();
				var dataObject = window.frames[0].__hi_result.data;
				var metadataObject = window.frames[0].__hi_result.metadata[0];
				var columns = Object.keys(dataObject[0]);
				var columnName = '';
				for(iter = 1; iter <= columns.length; iter++){
					if(metadataObject[iter].type === 'text'){
						columnName = metadataObject[iter].name;
						break;
					}
				}
				var firstColumnValues = dataObject.map(function(x){
					return x[columnName];
				});
				
				adhocScripts.setVariable("conditionArr", params.conditionArr);

			/*	var script2 = document.createElement("script");

				if(window.DashboardGlobals){
					script2.src = window.DashboardGlobals.baseUrl+"/getExternalResource.html?path=System/Admin/CustomScripts/Files/JS/spectrum.js";
				}else{
					script2.src = "/getExternalResource.html?path=System/Admin/CustomScripts/Files/JS/spectrum.js";
				}

				script2.async = false;

				document.getElementsByTagName("head")[0].appendChild(script2);

				var link = document.createElement("link");

				if(window.DashboardGlobals){
					link.href =  window.DashboardGlobals.baseUrl+"/getExternalResource.html?path=System/Admin/CustomScripts/Files/CSS/spectrum.css";
				}else{
				 link.href = "/getExternalResource.html?path=System/Admin/CustomScripts/Files/CSS/spectrum.css";
				}

				link.rel = "stylesheet";
				link.type="text/css"
				document.getElementsByTagName("head")[0].appendChild(link);		*/




        var conditionArr = JSON.parse(JSON.stringify(adhocScripts.getVariable("conditionArr")));
        var tgtPanel = 'conditionList';


     /* 	script2.onload = function() {
          createConditionList(conditionArr, tgtPanel);
		} */
		 var filteredArray = firstColumnValues.filter(function(item, pos){
		  return firstColumnValues.indexOf(item)== pos; 
		});
        function createConditionList(conditionArr){
          if(conditionArr.length == 0){
            conditionArr.push({color: "rgba(124,184,47,1)", value: filteredArray[0]});
          }
			adhocScripts.setVariable("conditionArr", conditionArr);	
          for(var i = 0 ; i < conditionArr.length; i++){
            var div = createConditionPanel(conditionArr[i], i);
            document.getElementById(tgtPanel).appendChild(div);
            spectrumFtn('input_color_'+i, conditionArr[i]);
          }
        }
		
		 createConditionList(conditionArr, tgtPanel);

        function addConditionPanel(object, tgtPanel){
			if(object.value.length == 0){
				object.value = filteredArray[0];
			}
		
            /*var x = d.target.id.split('_')[2];
            var key = d.target.id.split('_')[1];
			
            conditionArr[x][key] = d.target.value;*/
			conditionArr.push(object);
            adhocScripts.setVariable("conditionArr", conditionArr);	
		  var conditionArrLength = conditionArr.length;	
		  if(conditionArrLength <= filteredArray.length){
	          var index = conditionArr.length-1;
			  var div = createConditionPanel(object, index);
			  document.getElementById(tgtPanel).appendChild(div);
			  spectrumFtn('input_color_'+index, object);  
		  }
        }

        function createConditionPanel(object, index){
          var conditionOptions = ['line','bar', 'step', 'spline', 'scatter', 'area', 'area-step', 'area-spline'];
          var form = document.createElement('form');
          form.className = 'form-line col-sm-12 dataSet';
		  
          var divVal1 = document.createElement('div');
          divVal1.className = 'form-group col-sm-2 col-md-3 value_1';
        	divVal1.id = 'div_value_'+index;

          var labelVal1 = document.createElement('label');
          labelVal1.for = 'input_value_'+index;
          labelVal1.innerHTML = 'Value';

		  var inputVal1 = document.createElement('select');
		inputVal1.type = 'text';
		inputVal1.className = 'form-control';
		inputVal1.id = 'input_value_'+index;
		inputVal1.value = object.value;
	    inputVal1.onchange = setOnChange;
		
		for(var i = 0; i < filteredArray.length; i++){
              var options = document.createElement('option');
              options.value = filteredArray[i];
              options.text = filteredArray[i];
              //inputVal1.appendChild(options);
			  if(options.value == object.value || options.value == filteredArray[0]){
                options.selected = 'selected';
			  }
              inputVal1.appendChild(options);
          }

          divVal1.appendChild(labelVal1);
          divVal1.appendChild(inputVal1);

          form.appendChild(divVal1);


          var divColorVal = document.createElement('div');
           divColorVal.className = 'form-group col-sm-2 color';
        	divColorVal.id = 'div_color_'+index;

          var labelColorVal = document.createElement('label');
         // labelColorVal.for = 'input_color_'+index;
          labelColorVal.innerHTML = 'Color';

          var inputColorVal = document.createElement('div');
         // inputColorVal.type = 'text';
         // inputColorVal.className = 'form-control';
          inputColorVal.id = 'input_color_'+index;
        //  inputColorVal.onchange = setOnChange;
        //  inputColorVal.value = object.color;

          divColorVal.appendChild(labelColorVal);
          divColorVal.appendChild(inputColorVal);

          form.appendChild(divColorVal);

          
          var delButton = document.createElement('button');
          delButton.id = 'delete_'+index;
          delButton.classList = 'btn btn-danger ';
          delButton.innerHTML = '<span class="glyphicon glyphicon-trash"></span>';
          delButton.onclick = function(d){
            var index = d.target.id.split('_')[1];
            conditionArr.splice(index, 1);
            adhocScripts.setVariable("conditionArr", conditionArr);
            $(this).parent().remove();
          };
          delButton.style.marginTop = '25px';

          form.appendChild(delButton);

          return form;



          function setOnChange(d){
            var len = d.target.id.split('_').length;
            var x = d.target.id.split('_')[2];
            var key = d.target.id.split('_')[1];
			var val = d.target.value;
            conditionArr[x][key] = val;
            adhocScripts.setVariable("conditionArr", conditionArr);
          }
        }
		
		function setColorValue(paylod){			  
            var len = paylod['id'].split('_').length;
            var x = paylod['id'].split('_')[2];
            var key = paylod['id'].split('_')[1];
            var val = paylod['color'];

			conditionArr[x][key] = val;
			adhocScripts.setVariable("conditionArr", conditionArr);			  
		  }

				function spectrumFtn(id,Obj){
					
						HDIUI.renderColorPicker({
							id:id,
							color:( Obj && Obj.color) ? Obj.color : 'rgba(255,255,255,1)' ,
							change:function(color){	
								var rgbaCode='rgba('+color["color"]["r"] +','+ color["color"]["g"] +','+ color["color"]["b"] +','+ color["color"]["a"]+')';
								//setColorValue({id:id,color:rgbaCode});
								setColorValue({id:id,color:rgbaCode});
							}
						});			
					
					/* $("#"+id).spectrum({
				//		showInput: true,
						className: "full-spectrum",
						showInitial: true,
						showPalette: true,
						showSelectionPalette: true,
						showPaletteOnly: true,
						togglePaletteOnly: true,
						togglePaletteMoreText: 'more',
						togglePaletteLessText: 'less',
						hideAfterPaletteSelect:true,
						maxSelectionSize: 10,
						preferredFormat: "hex",
						localStorageKey: "spectrum.HIColorPallete",
						move: function (color) {

						},
						show: function () {
						},
						beforeShow: function (color) {

						//console.log(color.toRgb());
						},
						hide: function () {

						},
						change: function(color) {
							adhocScripts.setVariable("background",color.toHexString());
						},
						palette: [
							["#cfedfb", "#f0e3ef", "#ffe2d2", "#ffebb6", "#d2eceb", "#faf0b5", "#fbe2ed", "#e5efc7", "#e0e2e4"],
							["#9bdaf3", "#ddcce2", "#fec9b8", "#f9d291", "#a9dddd", "#f7df8c", "#f7c8de", "#cee4a3", "#caccce"],
							["#68c7ec", "#cab5d5", "#f7a897", "#f3b86d", "#80ced0", "#f4d161", "#f6a8ca", "#b0d775", "#b3b5b7"],
							["#34b3e4", "#b79ec7", "#f38a78", "#ec9f48", "#57bfc1", "#f0c23b", "#f289b7", "#92c749", "#9d9fa1"],
							["#00a0dc", "#a487ba", "#ef6c5a", "#e68523", "#00aeb3", "#edb220", "#ee62a2", "#7cb82f", "#86888a"]
						]
					});	*/
				}
				$(".modal-footer .btn-primary").on('click', function() {
					
				});
			</script>
		]]>
	</uiSnippet>
</customScript>
