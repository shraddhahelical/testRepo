<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<report>
    <reportName>CrossTab Heat report</reportName>
    <visible>true</visible>
    <metadata>
        <location>1463377807724/1463377836985</location>
        <metadataFileName>e9be6771-995b-40eb-a01c-304857a100a1.metadata</metadataFileName>
    </metadata>
    <canvas>
        <columns><![CDATA[[{"column":"travel_details.source","label":"travel_details_source","id":"8l0opyv2124","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"travel_details_source","groupBy":["db.generic.groupBy.group"],"alias":"Source"},{"column":"travel_details.destination","label":"travel_details_destination","id":"xocmhmvyr5i","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"travel_details_destination","groupBy":["db.generic.groupBy.group"],"alias":"Destination"},{"column":"travel_details.travel_cost","label":"travel_details_travel_cost","id":"1n125wxlcjkj","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"avg_travel_cost","aggregate":["db.generic.aggregate.avg"],"alias":"Cost"}]]]></columns>
    </canvas>
    <state><![CDATA[{"columns":[{"column":"travel_details.source","label":"travel_details_source","id":"8l0opyv2124","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"travel_details_source","groupBy":["db.generic.groupBy.group"],"alias":"Source"},{"column":"travel_details.destination","label":"travel_details_destination","id":"xocmhmvyr5i","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"travel_details_destination","groupBy":["db.generic.groupBy.group"],"alias":"Destination"},{"column":"travel_details.travel_cost","label":"travel_details_travel_cost","id":"1n125wxlcjkj","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"avg_travel_cost","aggregate":["db.generic.aggregate.avg"],"alias":"Cost"}],"filters":[{"values":["International"],"mode":"auto","dataType":"text","valuesMode":"auto","encloseInQuotes":false,"label":"travel_details_travel_type","column":"travel_details.travel_type","backendDataType":"java.lang.String","condition":"EQUALS"}],"customFilterExpression":"${0}","customHavingExpression":"","customFilterExpressionObj":{},"customHavingExpressionObj":{},"havingExpressionIndexs":{},"filterExpressionIndexs":{},"options":{"limitBy":15,"prependTableNameToAlias":true},"visualisation":{"type":"CrossTab","chartGroup":"","selectedType":"Table","settings":{"script":null,"vizscriptsEditMultipleMode":false,"crossTabRows":[{"column":"travel_details.destination","label":"travel_details_destination","id":"xocmhmvyr5i","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"travel_details_destination","groupBy":["db.generic.groupBy.group"],"alias":"Destination"}],"crossTabCols":[{"column":"travel_details.source","label":"travel_details_source","id":"8l0opyv2124","type":{"dataType":"text","backendDatatype":"java.lang.String"},"autogen_alias":"travel_details_source","groupBy":["db.generic.groupBy.group"],"alias":"Source"}],"crossTabVals":[{"column":"travel_details.travel_cost","label":"travel_details_travel_cost","id":"1n125wxlcjkj","type":{"dataType":"numeric","backendDatatype":"java.lang.Integer"},"autogen_alias":"avg_travel_cost","aggregate":["db.generic.aggregate.avg"],"alias":"Cost"}]},"vizSelectedScripts":[{"name":"Heat-Map","scriptId":"CrossTab_js_heatMap","scriptType":"js","group":"CrossTab","parameters":{"switch":"false","startColor":"rgb(255, 255, 255)","endColor":"rgb(255, 0, 0)"},"renderOn":"simpleModel","isEditable":true,"description":"Heat Map for Cross Tab","icon":"/images/scriptIcons/HeatMap.png","isSelected":true,"isActiveScript":"active","isCheckedForMultipleEdit":false,"snippet":"\n\t\t \n\t\t\tif(!hi_container.isSet(\"postExecution\")){\n\t\t\t\thi_container.set(\"postExecution\", heatmap);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"postExecution\", heatmap);\n\t\t\t}\n\t    \n\t\t\tfunction heatmap()   \n\t\t\t{\n\t\t\t\tvar startColor=\"rgb(255, 255, 255)\";\n\t\t\t\tstartColor = startColor.split('(')[1].split(')')[0];\n\t\t\t\tvar endColor=\"rgb(255, 0, 0)\";\n\t\t\t\tendColor = endColor.split('(')[1].split(')')[0];\n\t\t\t\tvar endColorArr=endColor.split(',');\n\t\t\t\tvar startColorArr=startColor.split(',');\n\t\t\t\t\n\t\t\t\tfunction Interpolate(start, end, steps, count) {\n\t\t\t\t\tvar s = start,\n\t\t\t\t\te = end,\n\t\t\t\t\tfinal = s + (((e - s) / steps) * count);\n\t\t\t\t\treturn Math.floor(final);\n\t\t\t\t};\n\n\t\t\t\tfunction Color(_r, _g, _b) {\n\t\t\t\t\tvar r, g, b;\n\t\t\t\t\tvar setColors = function(_r, _g, _b) {\n\t\t\t\t\t\tr = _r;\n\t\t\t\t\t\tg = _g;\n\t\t\t\t\t\tb = _b;\n\t\t\t\t\t};\n\n\t\t\t\t\tsetColors(_r, _g, _b);\n\t\t\t\t\tthis.getColors = function() {\n\t\t\t\t\t\tvar colors = {\n\t\t\t\t\t\t\t\tr: r,\n\t\t\t\t\t\t\t\tg: g,\n\t\t\t\t\t\t\t\tb: b\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\treturn colors;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\n\t\t\t\tfunction checker(table){\n\t\t\t\t\tvar valArr = [];\n\t\t\t\t\tvar cellData;\n\t\t\t\t\tvar val;\n\t\t\t\t\t[].forEach.call(table.rows, function(row, i){\n\t\t\t\t\t\tif (i===0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t[].forEach.call(row.cells, function(cell, i){\n\t\t\t\t\t\t\tcellData = cell.innerHTML.replace(/,/g , \"\");\n\t\t\t\t\t\t\tval = parseInt(cellData);\n\t\t\t\t\t\t\tif(!isNaN(val))\n\t\t\t\t\t\t\t  valArr.push(val);\n\t\t\t\t\t\t  \n\t\t\t\t\t\t\tvalArr.sort(function(a, b){return a-b});\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t[].forEach.call(table.rows, function(row, i){\n\t\t\t\t\t\tif (i===0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t[].forEach.call(row.cells, function(cell, i){\n\t\t\t\t\t\t\tred = new Color(parseInt(endColorArr[0]), parseInt(endColorArr[1]), parseInt(endColorArr[2])),\n\t\t\t\t\t\t\twhite = new Color(parseInt(startColorArr[0]),parseInt(startColorArr[1]),parseInt(startColorArr[2])),\n\t\t\t\t\t\t\tstart = white,\n\t\t\t\t\t\t\tend = red;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcellData = cell.innerHTML.replace(/,/g , \"\");\n\t\t\t\t\t\t\tval = parseInt(cellData);\n\t\t\t\t\t\t\tvar count = 2+valArr.indexOf(val);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar startColors = start.getColors(),\n\t\t\t\t\t\t\t\tendColors = end.getColors();\n\t\t\t\t\t\t\tvar r = Interpolate(startColors.r, endColors.r, valArr.length, count);\n\t\t\t\t\t\t\tvar g = Interpolate(startColors.g, endColors.g, valArr.length, count);\n\t\t\t\t\t\t\tvar b = Interpolate(startColors.b, endColors.b, valArr.length, count);\n\n\t\t\t\t\t\t\tif(!isNaN(val))\n\t\t\t\t\t\t\t\tcell.style.backgroundColor = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t\t\t\t}; \n\t\t  \n\t\t\t\tvar table = document.querySelectorAll(\".table\");\n\t\t\t\t[].forEach.call(table, checker);\n\t\t\t}\n\t\t\n\t"}]},"scripts":[],"styles":"","customStyles":"","customScripts":["\n\t\t \n\t\t\tif(!hi_container.isSet(\"postExecution\")){\n\t\t\t\thi_container.set(\"postExecution\", heatmap);\n\t\t\t}\n\t\t\telse{\n\t\t\t\thi_container.extend(\"postExecution\", heatmap);\n\t\t\t}\n\t    \n\t\t\tfunction heatmap()   \n\t\t\t{\n\t\t\t\tvar startColor=\"rgb(255, 255, 255)\";\n\t\t\t\tstartColor = startColor.split('(')[1].split(')')[0];\n\t\t\t\tvar endColor=\"rgb(255, 0, 0)\";\n\t\t\t\tendColor = endColor.split('(')[1].split(')')[0];\n\t\t\t\tvar endColorArr=endColor.split(',');\n\t\t\t\tvar startColorArr=startColor.split(',');\n\t\t\t\t\n\t\t\t\tfunction Interpolate(start, end, steps, count) {\n\t\t\t\t\tvar s = start,\n\t\t\t\t\te = end,\n\t\t\t\t\tfinal = s + (((e - s) / steps) * count);\n\t\t\t\t\treturn Math.floor(final);\n\t\t\t\t};\n\n\t\t\t\tfunction Color(_r, _g, _b) {\n\t\t\t\t\tvar r, g, b;\n\t\t\t\t\tvar setColors = function(_r, _g, _b) {\n\t\t\t\t\t\tr = _r;\n\t\t\t\t\t\tg = _g;\n\t\t\t\t\t\tb = _b;\n\t\t\t\t\t};\n\n\t\t\t\t\tsetColors(_r, _g, _b);\n\t\t\t\t\tthis.getColors = function() {\n\t\t\t\t\t\tvar colors = {\n\t\t\t\t\t\t\t\tr: r,\n\t\t\t\t\t\t\t\tg: g,\n\t\t\t\t\t\t\t\tb: b\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\treturn colors;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\n\t\t\t\tfunction checker(table){\n\t\t\t\t\tvar valArr = [];\n\t\t\t\t\tvar cellData;\n\t\t\t\t\tvar val;\n\t\t\t\t\t[].forEach.call(table.rows, function(row, i){\n\t\t\t\t\t\tif (i===0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t[].forEach.call(row.cells, function(cell, i){\n\t\t\t\t\t\t\tcellData = cell.innerHTML.replace(/,/g , \"\");\n\t\t\t\t\t\t\tval = parseInt(cellData);\n\t\t\t\t\t\t\tif(!isNaN(val))\n\t\t\t\t\t\t\t  valArr.push(val);\n\t\t\t\t\t\t  \n\t\t\t\t\t\t\tvalArr.sort(function(a, b){return a-b});\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t\t\t\t\t\n\t\t\t\t\t[].forEach.call(table.rows, function(row, i){\n\t\t\t\t\t\tif (i===0)\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t[].forEach.call(row.cells, function(cell, i){\n\t\t\t\t\t\t\tred = new Color(parseInt(endColorArr[0]), parseInt(endColorArr[1]), parseInt(endColorArr[2])),\n\t\t\t\t\t\t\twhite = new Color(parseInt(startColorArr[0]),parseInt(startColorArr[1]),parseInt(startColorArr[2])),\n\t\t\t\t\t\t\tstart = white,\n\t\t\t\t\t\t\tend = red;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tcellData = cell.innerHTML.replace(/,/g , \"\");\n\t\t\t\t\t\t\tval = parseInt(cellData);\n\t\t\t\t\t\t\tvar count = 2+valArr.indexOf(val);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tvar startColors = start.getColors(),\n\t\t\t\t\t\t\t\tendColors = end.getColors();\n\t\t\t\t\t\t\tvar r = Interpolate(startColors.r, endColors.r, valArr.length, count);\n\t\t\t\t\t\t\tvar g = Interpolate(startColors.g, endColors.g, valArr.length, count);\n\t\t\t\t\t\t\tvar b = Interpolate(startColors.b, endColors.b, valArr.length, count);\n\n\t\t\t\t\t\t\tif(!isNaN(val))\n\t\t\t\t\t\t\t\tcell.style.backgroundColor = \"rgb(\" + r + \",\" + g + \",\" + b + \")\";\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t});\t\n\t\t\t\t\t});\n\t\t\t\t}; \n\t\t  \n\t\t\t\tvar table = document.querySelectorAll(\".table\");\n\t\t\t\t[].forEach.call(table, checker);\n\t\t\t}\n\t\t\n\t"]}]]></state>
    <security>
        <createdBy>1</createdBy>
        <organization></organization>
    </security>
    <share mandatory="true">
        <roles mandatory="true">
            <role id="2">2</role>
        </roles>
    </share>
</report>
